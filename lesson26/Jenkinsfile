pipeline {
    agent {
        docker {
            image 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
        }
    }

    environment {
        GITHUB_CRED = "github-ssh"
        GITHUB_URL = "https://github.com/pasqueque/codeby-devops"
        APP_DEVOPS = "lesson26/devops-app"
        APP_JENKINS = "lesson26/jenkins-app"
        APP_WORLD = "lesson26/world-app"
    }

    triggers {
        pollSCM('H/2 * * * *')
    }

    stages {
        stage('Check out') {
            steps {
                git branch: 'lesson26', changelog: false, credentialsId: env.GITHUB_CRED, poll: false, url: env.GITHUB_URL
            }
        }

        stage('Build and Test') {

            steps {
                script {
                    def changedApps = []
                    // Определяем измененные приложения
                    def diff = sh 'git diff --name-only HEAD^ HEAD'
                    if (diff != null) {
                        if (diff.contains("${env.APP_DEVOPS}/") || diff.contains("${env.APP_DEVOPS}")) {
                            changedApps.add(env.APP_DEVOPS)
                        }
                        if (diff.contains("${env.APP_JENKINS}/") || diff.contains("${env.APP_JENKINS}")) {
                            changedApps.add(env.APP_JENKINS)
                        }
                        if (diff.contains("${env.APP_WORLD}/") || diff.contains("${env.APP_WORLD}")) {
                            changedApps.add(env.APP_WORLD)
                        }
                    }

                    parallel {
                        stage(APP_DEVOPS) {
                            when {
                                expression { changedApps.contains(env.APP_DEVOPS) }
                            }
                            steps {
                                dir(env.APP_DEVOPS) {
                                    script {
                                        sh 'mvn -B -DskipTests clean package'
                                        sh 'mvn test'
                                    }
                                }
                            }
                            post {
                                always {
                                    junit("${env.APP_DEVOPS}/target/surefire-reports/*.xml")
                                    archiveArtifacts "${env.APP_DEVOPS}/target/*.jar"
                                    //stash includes: "${env.APP_DEVOPS}/target/*.jar", name: "devops-app"
                                }
                            }
                        }

                        stage(APP_JENKINS) {
                            when {
                                expression { changedApps.contains(env.APP_JENKINS) }
                            }
                            steps {
                                dir(env.APP_JENKINS) {
                                    script {
                                        sh 'mvn -B -DskipTests clean package'
                                        sh 'mvn test'
                                    }
                                }
                            }
                            post {
                                always {
                                    junit("${env.APP_JENKINS}/target/surefire-reports/*.xml")
                                    archiveArtifacts "${env.APP_JENKINS}/target/*.jar"
                                    //stash includes: "${env.APP_JENKINS}/target/*.jar", name: "jenkins-app"
                                }
                            }
                        }

                        stage(APP_WORLD) {
                            when {
                                expression { changedApps.contains(env.APP_WORLD) }
                            }
                            steps {
                                dir(env.APP_WORLD) {
                                    script {
                                        sh 'mvn -B -DskipTests clean package'
                                        sh 'mvn test'
                                    }
                                }
                            }
                            post {
                                always {
                                    junit("${env.APP_WORLD}/target/surefire-reports/*.xml")
                                    archiveArtifacts "${env.APP_WORLD}/target/*.jar"
                                    //stash includes: "${env.APP_WORLD}/target/*.jar", name: "world-app"
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /*post {
        always {
            unstash 'devops-app'
            unstash 'jenkins-app'
            unstash 'world-app'
        }
    }*/
}
