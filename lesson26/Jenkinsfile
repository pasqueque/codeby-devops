pipeline {
    agent {
        docker {
            image 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
        }
    }

    environment {
        GITHUB_CRED = "github-ssh"
        GITHUB_URL = "https://github.com/pasqueque/codeby-devops"
        APP_DEVOPS = "lesson26/devops-app"
        APP_JENKINS = "lesson26/jenkins-app"
        APP_WORLD = "lesson26/world-app"
    }

    stages {
        stage('Check out') {
            steps {
                git branch: 'lesson26', changelog: false, credentialsId: env.GITHUB_CRED, poll: false, url: env.GITHUB_URL
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    def appResults = [:]
                    parallel "DevOps": {
                        appResults['DevOps'] = buildApp("${env.APP_DEVOPS}")
                    }, "Jenkins": {
                        appResults['Jenkins'] = buildApp("${env.APP_JENKINS}")
                    }, "World": {
                        appResults['World'] = buildApp("${env.APP_WORLD}")
                    }
                    echo "Results: ${appResults}"
                }
            }
        }
    }

    def buildApp(appName) {
        return {
            stage("Build and Test ${appName}") {
                steps {
                    dir("${appName}") {
                        script {
                            sh 'mvn -B -DskipTests clean package'
                            sh 'mvn test'
                        }
                    }
                }
                post {
                    always {
                        junit("${appName}/target/surefire-reports/*.xml")
                    }
                }
            }
        }
    }
}
